#
# Copyright (C) 2010-2012 Andrei Pozolotin <Andrei.Pozolotin@gmail.com>
#
# All rights reserved. Licensed under the OSI BSD License.
#
# http://www.opensource.org/licenses/bsd-license.php
#

########################################################################
#
#	${mavenStamp}
#


#********************************************************************
# http://wrapper.tanukisoftware.com/doc/english/props-directives.html
# Include file problems can be debugged by removing 
# the first '#' from the following line:
#
#include.debug
#
# the following lines are not comments but an "include" directives:
#
#include ./conf/wrapper.memory.properties
#include ./conf/wrapper/memory.properties
#
#include ./conf/wrapper/windows.properties
#
#include ./conf/wrapper/logging.properties
#
#include ./conf/wrapper/debug.properties
#


#********************************************************************
# http://wrapper.tanukisoftware.com/doc/english/prop-environment-dump.html
# This property will cause the Wrapper to dump all of the environment variables visible to the Wrapper, 
# along with where the values originated 
wrapper.environment.dump=true

#********************************************************************
# http://wrapper.tanukisoftware.com/doc/english/prop-on-exit-n.html
# It's possible to specify an action to take for any exit code 
# by making use of the wrapper.on_exit.default property and setting it to either SHUTDOWN or RESTART. 
wrapper.on_exit.default=RESTART
#wrapper.on_exit.0=SHUTDOWN
#wrapper.on_exit.101=RESTART

#********************************************************************
# http://wrapper.tanukisoftware.com/doc/english/prop-restart-reload-configuration.html
# This property controls whether or not the Wrapper configuration file will be reloaded in the event of a JVM restart.
wrapper.restart.reload_configuration=true

#********************************************************************
#	http://wrapper.tanukisoftware.org/doc/english/prop-ignore-sequence-gaps.html
#	Controls whether or not the Wrapper should allow gaps in sequences of properties
wrapper.ignore_sequence_gaps=true


#********************************************************************
# Wrapper Java Properties
#********************************************************************


#********************************************************************
#	http://wrapper.tanukisoftware.org/doc/english/prop-java-command-loglevel.html
#	Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=INFO

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-command.html
#	Java Application itself
#wrapper.java.command=${javaCommand}
wrapper.java.command=%JAVA_HOME%/bin/java

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-classpath-n.html
#	Java Classpath (must include wrapper.jar)  
#	Add class path elements as needed starting from 1
#
# 	contract: expecting everything ONLY in these locations for app boot
#	current directory is defined by the running wrapper binary location 
wrapper.java.classpath.1=./conf
wrapper.java.classpath.2=./lib/*.jar

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-library-path-n.html
# 	Java Library Path (location of native libraries such as wrapper.dll or libwrapper.so)
#	must place here wrapper own native library
wrapper.java.library.path.1=./bin
wrapper.java.library.path.2=./lib

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-library-path-append-system-path.html
# 	this property will cause the Wrapper to append the contents of the system PATH or LD_LIBRARY_PATH 
# 	to the java library path used to launch the JVM
wrapper.java.library.path.append_system_path=true

#********************************************************************
#
wrapper.java.additional.50=-Djava.endorsed.dirs=%JAVA_HOME%/jre/lib/endorsed%WRAPPER_PATH_SEPARATOR%%JAVA_HOME%/lib/endorsed%WRAPPER_PATH_SEPARATOR%./lib/endorsed
#
wrapper.java.additional.51=-Djava.ext.dirs=%JAVA_HOME%/jre/lib/ext%WRAPPER_PATH_SEPARATOR%%JAVA_HOME%/lib/ext%WRAPPER_PATH_SEPARATOR%./lib/ext
#

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-additional-n.html
#	Additional Parameters to the Java JVM
wrapper.java.additional.100=${javaParameter0}
wrapper.java.additional.101=${javaParameter1}
wrapper.java.additional.102=${javaParameter2}
wrapper.java.additional.103=${javaParameter3}
wrapper.java.additional.104=${javaParameter4}
wrapper.java.additional.105=${javaParameter5}
wrapper.java.additional.106=${javaParameter6}
wrapper.java.additional.107=${javaParameter7}
wrapper.java.additional.108=${javaParameter8}
wrapper.java.additional.109=${javaParameter9}
wrapper.java.additional.110=${javaParameter10}
wrapper.java.additional.111=${javaParameter11}
wrapper.java.additional.112=${javaParameter12}
wrapper.java.additional.113=${javaParameter13}
wrapper.java.additional.114=${javaParameter14}
wrapper.java.additional.115=${javaParameter15}
wrapper.java.additional.116=${javaParameter16}
wrapper.java.additional.117=${javaParameter17}
wrapper.java.additional.118=${javaParameter18}
wrapper.java.additional.119=${javaParameter19}
wrapper.java.additional.120=${javaParameter20}
wrapper.java.additional.121=${javaParameter21}
wrapper.java.additional.122=${javaParameter22}
wrapper.java.additional.123=${javaParameter23}
wrapper.java.additional.124=${javaParameter24}

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-java-mainclass.html
#	Java Main class.  This class must implement the WrapperListener interface
# 	or guarantee that the WrapperManager class is initialized.  Helper
#	classes are provided to do this for you.  See the Integration section
#	of the documentation for details.
# 	we are using WrapperSimpleApp as main application
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

#********************************************************************
# http://wrapper.tanukisoftware.org/doc/english/prop-app-parameter-n.html
#	Application parameters.  Add parameters as needed starting from 1
# 	we are using WrapperSimpleApp as main application which, in trun,
#	takes our main class name as parameter #1, 
wrapper.app.parameter.1=${mainClass}
#	which in turn, takes all of the following parameters as its own
wrapper.app.parameter.100=${mainParameter0}
wrapper.app.parameter.101=${mainParameter1}
wrapper.app.parameter.102=${mainParameter2}
wrapper.app.parameter.103=${mainParameter3}
wrapper.app.parameter.104=${mainParameter4}
wrapper.app.parameter.105=${mainParameter5}
wrapper.app.parameter.106=${mainParameter6}
wrapper.app.parameter.107=${mainParameter7}
wrapper.app.parameter.108=${mainParameter8}
wrapper.app.parameter.109=${mainParameter9}
wrapper.app.parameter.110=${mainParameter10}
wrapper.app.parameter.111=${mainParameter11}
wrapper.app.parameter.112=${mainParameter12}
wrapper.app.parameter.113=${mainParameter13}
wrapper.app.parameter.114=${mainParameter14}
wrapper.app.parameter.115=${mainParameter15}
wrapper.app.parameter.116=${mainParameter16}
wrapper.app.parameter.117=${mainParameter17}
wrapper.app.parameter.118=${mainParameter18}
wrapper.app.parameter.119=${mainParameter19}
wrapper.app.parameter.120=${mainParameter20}
wrapper.app.parameter.121=${mainParameter21}
wrapper.app.parameter.122=${mainParameter22}
wrapper.app.parameter.123=${mainParameter23}
wrapper.app.parameter.124=${mainParameter24}

#********************************************************************
# Title to use when running as a console
# http://wrapper.tanukisoftware.com/doc/english/prop-console-title.html
# Setting this property allows the Title Bar of the console 
# in which the Wrapper is running to be set
wrapper.console.title=${serviceName}
